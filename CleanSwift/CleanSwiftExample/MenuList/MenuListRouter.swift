//
//  MenuListRouter.swift
//  CleanSwiftExample
//
//  Created by 최승환 on 2019. 3. 9..
//  Copyright (c) 2019년 최승환. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol MenuListRoutingLogic
{
    func navigateToBucketList(source: MenuListViewController, destination: BucketListViewController)
}

protocol MenuListDataPassing
{
  var dataStore: MenuListDataStore? { get }
}

class MenuListRouter: NSObject, MenuListRoutingLogic, MenuListDataPassing
{
  weak var viewController: MenuListViewController?
  var dataStore: MenuListDataStore?
  
  // MARK: Routing
  
  //func routeToSomewhere(segue: UIStoryboardSegue?)
  //{
  //  if let segue = segue {
  //    let destinationVC = segue.destination as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //  } else {
  //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
  //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //    navigateToSomewhere(source: viewController!, destination: destinationVC)
  //  }
  //}

  // MARK: Navigation
  
  func navigateToBucketList(source: MenuListViewController, destination: BucketListViewController)
  {
//    source.show(destination, sender: nil)
    viewController?.navigationController?.pushViewController(destination, animated: true)
    
    var destinationDataStore = destination.router?.dataStore
    
    passDataToBucketList(source: dataStore!, destination: &destinationDataStore!)
  }
  
//   MARK: Passing data
  
  func passDataToBucketList(source: MenuListDataStore, destination: inout BucketListDataStore)
  {
    let selectedRow = viewController?.TV.indexPathForSelectedRow?.row
    let bucket = Bucket.sharedInstance
    bucket.List.append(source.menuList[selectedRow!])
//    destination.selectedMenu.append(source.menuList[selectedRow!])
  }
}
